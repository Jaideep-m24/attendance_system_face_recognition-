# 0. Use Python 3.11 slim as before
FROM python:3.11-slim

# 1. Install system packages you need for dlib+OpenCV
#    libsm6, libxext6, libxrender-dev are OpenCV headless dependencies
RUN apt-get update && apt-get install -y \
    build-essential cmake libglib2.0-0 \
    libsm6 libxext6 libxrender-dev \
  && rm -rf /var/lib/apt/lists/*

# 2. Limit make to 1 job (cuts peak RAM in half or more)
ENV MAKEFLAGS="-j1"

# 3. Turn off pip cache to save disk/RAM
ENV PIP_NO_CACHE_DIR=off

WORKDIR /app

# 4. Copy only requirements first so Docker layer-caching works
COPY requirements.txt .

# 5. Upgrade pip, then install wheels first, then build source packages
#    We install numpy & OpenCV wheels (theyâ€™re prebuilt), then dlib
RUN pip install --upgrade pip \
 && pip install --no-cache-dir \
      numpy==1.24.3 \
      opencv-python-headless==4.8.1.78 \
 && pip install --no-cache-dir \
      dlib==19.24.1 \
 && pip install --no-cache-dir \
      -r requirements.txt  # install the rest (Flask, CORS, Supabase, Gunicorn)

# 6. Copy your code & download models
COPY . .
RUN python download_models.py

# 7. Expose & run
EXPOSE 8080
CMD ["gunicorn", "app:app", "--bind", "0.0.0.0:8080"]
